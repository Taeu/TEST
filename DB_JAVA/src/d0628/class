Class initTest{
	static int abc; //클래스 변수
	int x;			//인스턴스 변수
	int y =x; 		//인스턴스 변수

	void method(){
		int i=0;	// 지역 변수는 반드시 초기화를 해줘야한다.
		int j;		// 지역변수
	}
}

[생성자에서 다른 생성자 호출]
1. 생성자의 이름으로 클래스이름 대신 this를 사용한다.
2. 한 생성자에서 다른 생성자를 호출할 때는 반드시 첫 줄에서만 호출이 가능하다

[변수의 초기화]
멤버변수(클래스변수와 인스턴스변수)와 배열의 초기화는 선택적이지만
지역변수(method 안에 있는 변수  )는 반드시 사용하기 전에 초기화 해주어야 한다.
-----( 예시 )-----------------------------------------------------
int i=10;
int j=20; // int i=10,j=20;
-----------------------------------------------------------------
int i =10, long j =20L; // error()! 다른 타입의 경우 ,로 한줄로 묶을 수 없다.
int i =10; long j =20L; // OK! 다른 타입의 경우는 ,가 아닌 ;으로 구분
-----------------------------------------------------------------
int i=10;
int j=i;  // ok
-----------------------------------------------------------------
int j=i;  // 여기서 error! 아직 i라는 변수가 해당하는 줄 위에서 선언되지 않았기 때문에 존재하지 않음.
int j=10; 

1. 명시적 초기화(explicit initialization)
2. 생성자를 통해 (constructor)
3. 초기화 블럭(initialization block)
	-인스턴스 초기화 블럭 : 인스턴스변수를 초기화하는데 사용.
	-클래스 초기화 블럭 	: 클래스변수를 초기화하는데 사용.
-----( 예시 )-----------------------------------------------------
1. 명시적 초기화
class Car{
	int door =4;			// 기본형 변수의 초기화  [*기본형이랑 : java가 기본적으로 제공하는 변수타입,int long과 같은]
	Engine e = new Engine();// 참조형 변수의 초기화 
	.........
}	
-----------------------------------------------------------------
3. 초기화 블럭 /*블럭이란? {} 로 이루어진 구간
--칠판
class PN{ /*PN을 PhoneNumber의 줄임으로 쓰겠음*/
 	String name = "";
	PN(){}				//생성자
	{this.name="A"; } 	//인스턴스 초기화 block.
	static{			}	//클래스 인스턴스 초기화 block
}	
--code ex)
BlockTest.java 참고
-----------------------------------------------------------------
[멤버변수의 초기화 시기와 순서]
클래스(static) 변수의 초기화 시점		: 클래스가 로딩될 때, 1번만 실행된다 
인스턴스(instance) 변수의 초기화 시점    : 인스턴스가 생성될 때 , 각 인스턴스마다 초기화 된다.
클래스 변수의 초기화 순서  : 기본값 -> 명시적 초기화 -> 클래스 초기화 블럭
인스턴스변수의 초기화 순서: 기본값 -> 명시적 초기화 -> 인스턴스초기화블럭 -> 생성자 
-- 
class initTest{
	static int cv =1;
		   int iv =1;
	static { cv=2;}
		   { iv=2;}
	initTest(){ iv=3;}
	
} // BlockTest.java 참고
//기본값  int의 기본값은 0이다.
 63번째 줄 후, cv =1로 할당 // 명시적 초기화,만약 int cv; 일 경우 cv=0이다. int의  default 할당값은 0
 64번째 줄 후, iv =1로 할당 // 명시적 초기화
 65번째 줄 후, cv = 2로 할당 // 클래스 초기화 블럭
 66번째 줄 후, iv = 2로 할당 // 인스턴스 초기화 블럭
 마지막으로 67번째는 new initTest(); 로 생성자를 부르면, iv=3으로 할당	  
 정확한 순서는, 
 [클래스   ] static 이 붙어있는 줄 들, 63, 65가 수행되고
 [인스턴스] 기본형들,64, 66, 67들이 수행된다.
 
 // 단일상속
 Java는 단일상속만을 허용한다
 class TVCR extends TV, VCR // error!
 -> 두개 다 받고싶으면 어ㄸ허게?
 class TVCR extends TV  // 제일 중요한 부분을 상속한  뒤
 {
  VCR vcr = new VCR(); // 나머지 부분은 이렇게 안으로 포함시킨다.
 }
 // Object class
 모든 class의 조상은 Object클래스. 최상위 클래스
 